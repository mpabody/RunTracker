@model BlueBadgeRunTracker.Controllers.AllRacesModel
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "IndexAll";
}

<div class="row">
    <div class="col-lg-6">
        <div class="PageHeading">
            <h2>Races I've Run</h2>

            <p>
                @Html.ActionLink("Add a race I've run", "Create")
            </p>
            @using (Html.BeginForm("IndexAll", "Race", FormMethod.Get))
            {
                <p>
                    Search this list: @Html.TextBox("SearchStringR", ViewBag.CurrentFilterR as string)
                    <input type="submit" value="Search" />
                </p>
            }
        </div>
        <table class="table">
            <tr>
                <th>
                    @Html.ActionLink("Name", "IndexAll", new { sortOrderR = ViewBag.NameSortR, sortOrderI = ViewBag.CurrentSortI, currentFilterR = ViewBag.CurrentFilterR, currentFilterI = ViewBag.CurrentFilterI, pageI = Model.InterestedRaces.PageNumber })
                </th>
                <th>
                    @Html.ActionLink("Date", "IndexAll", new { sortOrderR = ViewBag.DateSortR, sortOrderI = ViewBag.CurrentSortI, currentFilterR = ViewBag.CurrentFilterR, currentFilterI = ViewBag.CurrentFilterI, pageI = Model.InterestedRaces.PageNumber })
                <th>
                    @Html.ActionLink("Location", "IndexAll", new { sortOrderR = ViewBag.LocationSortR, sortOrderI = ViewBag.CurrentSortI, currentFilterR = ViewBag.CurrentFilterR, currentFilterI = ViewBag.CurrentFilterI, pageI = Model.InterestedRaces.PageNumber })
                </th>
                <th>
                    @Html.ActionLink("Distance", "IndexAll", new { sortOrderR = ViewBag.DistanceSortR, sortOrderI = ViewBag.CurrentSortI, currentFilterR = ViewBag.CurrentFilterR, currentFilterI = ViewBag.CurrentFilterI, pageI = Model.InterestedRaces.PageNumber })
                </th>
                <th></th>
            </tr>

            @foreach (var item in Model.RanRaces)
            {
                if (item.CompletionTime != null)
                {
                    <tr>
                        @Html.HiddenFor(modelItem => item.RaceID)
                        <td>
                            @Html.DisplayFor(modelItem => item.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Date)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Location)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Distance)
                        </td>
                        @Html.HiddenFor(modelItem => item.CompletionTime)
                        <td>
                            @Html.ActionLink("Edit", "EditRan", new { id = item.RaceID }) |
                            @Html.ActionLink("Details", "DetailsRan", new { id = item.RaceID })            |
                            @Html.ActionLink("Delete", "DeleteRan", new { id = item.RaceID })
                        </td>
                    </tr>
                }
            }
        </table>
        <br />
        Page @(Model.RanRaces.PageCount < Model.RanRaces.PageNumber ? 0 : Model.RanRaces.PageNumber) of @Model.RanRaces.PageCount

        @Html.PagedListPager(Model.RanRaces, pageR => Url.Action("IndexAll",
            new { pageR, sortOrderR = ViewBag.CurrentSortR, currentFilterR = ViewBag.CurrentFilterR, sortOrderI = ViewBag.CurrentSortI, currentFilterI = ViewBag.CurrentFilterI, pageI = Model.InterestedRaces.PageNumber }))

    </div>



    <div class="col-lg-6">
        <div class="PageHeading">

            <h2>Races I'm Interested In</h2>
            <p>
                @Html.ActionLink("Add a race I'm interested in", "CreateInterested")
            </p>

            @using (Html.BeginForm("IndexAll", "Race", FormMethod.Get))
            {
                <p>
                    Search this list: @Html.TextBox("SearchStringI", ViewBag.CurrentFilterR as string)
                    <input type="submit" value="Search" />
                </p>
            }
        </div>
        <table class="table">
            <tr>

                <th>
                    @Html.ActionLink("Name", "IndexAll", new { sortOrderI = ViewBag.NameSortI, sortOrderR = ViewBag.CurrentSortR, currentFilterI = ViewBag.CurrentFilterI, currentFilterR = ViewBag.CurrentFilterR, pageR = Model.RanRaces.PageNumber })
                </th>
                <th>
                    @Html.ActionLink("Date", "IndexAll", new { sortOrderI = ViewBag.DateSortI, sortOrderR = ViewBag.CurrentSortR, currentFilterI = ViewBag.CurrentFilterI, currentFilterR = ViewBag.CurrentFilterR, pageR = Model.RanRaces.PageNumber })
                </th>
                <th>
                    @Html.ActionLink("Location", "IndexAll", new { sortOrderI = ViewBag.LocationSortI, sortOrderR = ViewBag.CurrentSortR, currentFilterI = ViewBag.CurrentFilterI, currentFilterR = ViewBag.CurrentFilterR, pageR = Model.RanRaces.PageNumber })
                </th>
                <th>
                    @Html.ActionLink("Distance", "IndexAll", new { sortOrderI = ViewBag.DistanceSortI, sortOrderR = ViewBag.CurrentSortR, currentFilterI = ViewBag.CurrentFilterI, currentFilterR = ViewBag.CurrentFilterR, pageR = Model.RanRaces.PageNumber })
                </th>
                <th></th>
            </tr>


            @foreach (var item in Model.InterestedRaces)
            {
                if (item.CompletionTime == null)
                {
                    <tr>
                        @Html.HiddenFor(modelItem => item.RaceID)
                        <td>
                            @Html.DisplayFor(modelItem => item.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Date)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Location)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Distance)
                        </td>
                        <td>
                            @Html.ActionLink("Edit", "EditInterested", new { id = item.RaceID }) |
                            @Html.ActionLink("Details", "DetailsInterested", new { id = item.RaceID }) |
                            @Html.ActionLink("Delete", "DeleteInterested", new { id = item.RaceID }) <br />
                            @Html.ActionLink("I ran this race", "ConvertToRan", new { id = item.RaceID }, new { @class = "btn btn-primary btn-xs" })
                        </td>
                    </tr>
                }

            }
        </table>
        <br />
        Page @(Model.InterestedRaces.PageCount < Model.InterestedRaces.PageNumber ? 0 : Model.InterestedRaces.PageNumber) of @Model.InterestedRaces.PageCount

        @Html.PagedListPager(Model.InterestedRaces, pageI => Url.Action("IndexAll",
            new { pageI, sortOrderI = ViewBag.CurrentSortI, currentFilterI = ViewBag.CurrentFilterI, sortOrderR = ViewBag.CurrentSortR, currentFilterR = ViewBag.CurrentFilterR, pageR = Model.RanRaces.PageNumber }))

    </div>
</div>